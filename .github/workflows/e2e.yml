name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # ÊØèÂ§©ÂáåÊô®2ÁÇπËøêË°å
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Browsers
        run: |
          cd tests/e2e
          pnpm install
          pnpm exec playwright install --with-deps

      - name: Build application
        run: |
          cd apps/web/apps/web
          pnpm build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_STREAM_CHAT_API_KEY: demo-api-key

      - name: Start application
        run: |
          cd apps/web/apps/web
          pnpm start &
          sleep 10
        env:
          PORT: 3000

      - name: Run Playwright tests
        run: |
          cd tests/e2e
          pnpm test
        env:
          BASE_URL: http://localhost:3000
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/e2e/playwright-report/
          retention-days: 30

      - name: Upload test screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-screenshots
          path: tests/e2e/test-results/
          retention-days: 30

  notify-results:
    name: Notify Test Results
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()
    steps:
      - name: Send notification
        run: |
          if [[ "${{ needs.e2e-tests.result }}" == "success" ]]; then
            echo "‚úÖ E2E tests passed successfully"
          else
            echo "‚ùå E2E tests failed"
            echo "üìä Check test reports and screenshots in artifacts"
          fi 