name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'apps/web/**'
      - 'functions/pages/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - 'package.json'
  pull_request:
    branches:
      - main
    paths:
      - 'apps/web/**'
      - 'functions/pages/**'
      - 'packages/**'

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm typecheck --strict

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build web app
        run: |
          cd apps/web/apps/web
          pnpm build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_STREAM_CHAT_API_KEY: ${{ secrets.NEXT_PUBLIC_STREAM_CHAT_API_KEY }}
          AI_PROXY_URL: ${{ secrets.AI_PROXY_URL }}

      - name: Build Pages Functions
        run: |
          cd functions/pages
          pnpm build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: baidaohui
          directory: apps/web/apps/web/out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Deploy Pages Functions
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy functions/pages/dist --project-name=baidaohui
        env:
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}

  notify-success:
    name: Notify Deployment Success
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()
    steps:
      - name: Send success notification
        run: |
          echo "‚úÖ Cloudflare Pages deployment successful"
          echo "üåê Site URL: https://baidaohui.pages.dev"
          echo "üì¶ Commit: ${{ github.sha }}" 