name: Deploy Microservices to VPS

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths:
      - 'services/**'
      - 'docker/**'
      - 'deploy/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  build-and-test:
    name: Build and Test Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [gateway, fortune, chat, ai-proxy, auth]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build service
        run: |
          cd services/${{ matrix.service }}
          pnpm build

      - name: Run tests
        run: |
          cd services/${{ matrix.service }}
          pnpm test || echo "No tests found for ${{ matrix.service }}"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-build
          path: services/${{ matrix.service }}/dist
          retention-days: 1

  deploy-sj-vps:
    name: Deploy to San Jose VPS
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        service: [gateway, chat, ai-proxy, auth]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.service }}-build
          path: services/${{ matrix.service }}/dist

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SJ_VPS_SSH_KEY }}

      - name: Deploy to San Jose VPS
        run: |
          # ÂàõÂª∫ÈÉ®ÁΩ≤ÁõÆÂΩï
          ssh -o StrictHostKeyChecking=no bgy@107.172.87.113 "mkdir -p /home/bgy/baidaohui/services/${{ matrix.service }}"
          
          # ‰∏ä‰º†ÊúçÂä°Êñá‰ª∂
          scp -r services/${{ matrix.service }}/* bgy@107.172.87.113:/home/bgy/baidaohui/services/${{ matrix.service }}/
          
          # ‰∏ä‰º†DockerÈÖçÁΩÆ
          scp docker/base-node.dockerfile bgy@107.172.87.113:/home/bgy/baidaohui/docker/
          
          # ÈÉ®ÁΩ≤ÊúçÂä°
          ssh -o StrictHostKeyChecking=no bgy@107.172.87.113 << 'EOF'
            cd /home/bgy/baidaohui/services/${{ matrix.service }}
            
            # ÂÆâË£Ö‰æùËµñ
            pnpm install --prod --frozen-lockfile
            
            # ÂÅúÊ≠¢Áé∞ÊúâÊúçÂä°
            pm2 stop ${{ matrix.service }} || true
            pm2 delete ${{ matrix.service }} || true
            
            # ÂêØÂä®Êñ∞ÊúçÂä°
            pm2 start dist/main.js --name ${{ matrix.service }} --max-memory-restart 512M
            pm2 save
          EOF

      - name: Health Check
        run: |
          sleep 30
          ssh -o StrictHostKeyChecking=no bgy@107.172.87.113 "pm2 status ${{ matrix.service }}"

  deploy-buf-vps:
    name: Deploy to Buffalo VPS
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        service: [fortune]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.service }}-build
          path: services/${{ matrix.service }}/dist

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.BUF_VPS_SSH_KEY }}

      - name: Deploy to Buffalo VPS
        run: |
          # ÂàõÂª∫ÈÉ®ÁΩ≤ÁõÆÂΩï
          ssh -o StrictHostKeyChecking=no bgy@216.144.233.104 "mkdir -p /home/bgy/baidaohui/services/${{ matrix.service }}"
          
          # ‰∏ä‰º†ÊúçÂä°Êñá‰ª∂
          scp -r services/${{ matrix.service }}/* bgy@216.144.233.104:/home/bgy/baidaohui/services/${{ matrix.service }}/
          
          # ‰∏ä‰º†DockerÈÖçÁΩÆ
          scp docker/base-node.dockerfile bgy@216.144.233.104:/home/bgy/baidaohui/docker/
          
          # ÈÉ®ÁΩ≤ÊúçÂä°
          ssh -o StrictHostKeyChecking=no bgy@216.144.233.104 << 'EOF'
            cd /home/bgy/baidaohui/services/${{ matrix.service }}
            
            # ÂÆâË£Ö‰æùËµñ
            pnpm install --prod --frozen-lockfile
            
            # ÂÅúÊ≠¢Áé∞ÊúâÊúçÂä°
            pm2 stop ${{ matrix.service }} || true
            pm2 delete ${{ matrix.service }} || true
            
            # ÂêØÂä®Êñ∞ÊúçÂä°
            pm2 start dist/main.js --name ${{ matrix.service }} --max-memory-restart 256M
            pm2 save
          EOF

      - name: Health Check
        run: |
          sleep 30
          ssh -o StrictHostKeyChecking=no bgy@216.144.233.104 "pm2 status ${{ matrix.service }}"

  notify-deployment:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-sj-vps, deploy-buf-vps]
    if: always()
    steps:
      - name: Send deployment notification
        run: |
          if [[ "${{ needs.deploy-sj-vps.result }}" == "success" && "${{ needs.deploy-buf-vps.result }}" == "success" ]]; then
            echo "‚úÖ All microservices deployed successfully"
            echo "üè∑Ô∏è Tag: ${{ github.ref_name }}"
            echo "üì¶ Commit: ${{ github.sha }}"
          else
            echo "‚ùå Deployment failed"
            echo "üîç Check logs for details"
          fi 